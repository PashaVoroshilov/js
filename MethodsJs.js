								Array
Array.pop() Удаляет последний элемент из массива и возвращает его;
Array.push() Добавляет один или более элементов в конец массива и возвращает новую длину массива;
Array.reverse() Переворачивает порядок элементов в массиве — первый элемент становится последним, а последний — первым;
Array.shift() Удаляет первый элемент из массива и возвращает его;
Array.unshift() Добавляет один или более элементов в начало массива и возвращает новую длину массива;
Array.sort() Сортирует элементы массива на месте и возвращает отсортированный массив;
Array.splice() Добавляет и/или удаляет элементы из массива;
Array.slice() Извлекает диапазон значений и возвращает его в виде нового массива;
Array.concat() Возвращает новый массив, состоящий из данного массива, соединённого с другим массивом и/или значением (списком массивов/значений);
Array.join() Объединяет все элементы массива в строку;
Array.toString() Возвращает строковое представление массива и его элементов. Переопределяет метод Object.toString();
Array.toLocaleString() Возвращает локализованное строковое представление массива и его элементов. Переопределяет метод Object.toLocaleString();
Array.indexOf() Возвращает первый (наименьший) индекс элемента внутри массива, равный указанному значению; или -1, если значение не найдено;
Array.lastIndexOf() Возвращает последний (наибольший) индекс элемента внутри массива, равный указанному значению; или -1, если значение не найдено;
Array.forEach() Вызывает функцию для каждого элемента в массиве;
Array.every() Возвращает true, если каждый элемент в массиве удовлетворяет условию проверяющей функции;
Array.some() Возвращает true, если хотя бы один элемент в массиве удовлетворяет условию проверяющей функции;
Array.filter() Создаёт новый массив со всеми элементами этого массива, для которых функция фильтрации возвращает true;
Array.map() Создаёт новый массив с результатами вызова указанной функции на каждом элементе данного массива;
Array.reduce() Применяет функцию к аккумулятору и каждому значению массива (слева-направо), сводя его к одному значению;
Array.reduceRight() Применяет функцию к аккумулятору и каждому значению массива (справа-налево), сводя его к одному значению;

								String 
String.fromCharCode() Возвращает строку, созданную из указанной последовательности значений Юникода;
String.charAt() Возвращает символ по указанному индексу;
String.charCodeAt() Возвращает число, представляющее значение символа в Юникоде по указанному индексу;
String.concat() Объединяет текст двух строк и возвращает новую строку;
String.indexOf() Возвращает индекс первого вхождения указанного значения в объекте String, на котором был вызван этот метод, или -1, если вхождений нет;
String.lastIndexOf() Возвращает индекс последнего вхождения указанного значения в объекте String, на котором был вызван этот метод, или -1, если вхождений нет;
String.localeCompare() Возвращает число, указывающее, находится ли образцовая строка до, после или на том же самом месте, что и указанная строка в порядке сортировки;
String.match() Используется для сопоставления строке регулярного выражения;
String.repeat() Возвращает строку. состоящую из элементов объекта, повторённых указанное количество раз;
String.replace() Используется для сопоставления строке регулярного выражения и для замены совпавшей подстроки на новую подстроку;
String.search() Выполняет поиск совпадения регулярного выражения со строкой;
String.slice() Извлекает часть строки и возвращает новую строку;
String.split() Разбивает объект String на массив строк, разделёных указанной строкой на подстроки;
String.substring() Возвращает символы в строке между двумя индексами;
String.toLowerCase() Возвращает строковое значение с символами в нижнем регистре;
String.toUpperCase() Возвращает строковое значение с символами в верхнем регистре;
String.trim() Обрезает пробельные символы в начале и в конце строки. Часть стандарта ECMAScript 5;
String.valueOf() Возвращает примитивное значение указанного объекта. Переопределяет метод Object.valueOf();

								Number
Number.MAX_VALUE Наибольшее представимое положительное число;
Number.MIN_VALUE Наименьшее представимое положительное число — то есть, самое близкое к нулю положительное число (которое ещё не является нулём);
Number.NaN Специальное значение для представления «не числа»;
Number.NEGATIVE_INFINITY Специальное значение для представления отрицательной бесконечности; возвращается при переполнении;
Number.POSITIVE_INFINITY Специальное значение для представления положительной бесконечности; возвращается при переполнении;
Number.toExponential() Возвращает строку, представляющую число в экспоненциальной записи;
Number.toFixed() Возвращает строку, представляющую число в записи с фиксированной запятой;
Number.toPrecision() Возвращает строку, представляющую число с указанной точностью в экспоненциальной записи, либо записи с фиксированной запятой;
